from utils import *
import random

class ContentManager:
    def __init__(self):
        self.list_unused = []
        logger_rew.info('start to read benign section content')
        self.list_file = os.listdir(Utils.get_benign_content_folder())
        
        logger_rew.info(len(self.list_file))
        for filename in self.list_file:
           name = filename.split('|')[1]
           size = int(filename.split('|')[2])
           if size < Utils.get_smallest_section_size() or size > Utils.get_largest_section_size():
               continue
           with open(Utils.get_benign_content_folder() + filename, 'rb') as fp:
               content = fp.read()
           self.list_unused.append((name, size, content))
        logger_rew.info('content count: %d' %len(self.list_unused))
        logger_rew.info('finish')

    def get_an_unused_content(self):
        if len(self.list_file) == 0:
            logger_rew.error('ERROR! No more section content')
            exit()
        (name, size, content) = random.choice(self.list_unused)
        self.list_unused.remove((name, size, content))
        print('name, size, content:', name, size)
        return name, size, content
        
        # while True:
        #     filename = random.choice(self.list_file)
        #     print('get unused content from:', filename)
        #     self.list_file.remove(filename)
        #     name = filename.split('|')[1]
        #     size = int(filename.split('|')[2])
        #     if size >= Utils.get_smallest_section_size() and size <= Utils.get_largest_section_size():
        #         with open(Utils.get_benign_content_folder() + filename, 'rb') as fp:
        #             content = fp.read()
        #         return name, size, content