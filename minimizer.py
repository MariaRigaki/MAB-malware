from utils import *

class Minimizer:
    def __init__(self, samples_manager, rewriter):
        self.samples_manager = samples_manager
        self.rewriter = rewriter

    def run(self):
        while True:
            count_evasive = self.samples_manager.get_count_with_status('evasive')
            count_minimal = self.samples_manager.get_count_with_status('minimal')
            
            if count_evasive == 0:
                logger_min.info('No evasive samples, sleep...')
                time.sleep(5)
            else:
                self.samples_manager.minimize_evasive_sample()
                self.samples_manager.update_evasive_list(self.rewriter.exit)
                if Utils.is_cuckoo_enable():
                    self.samples_manager.update_minimal_list(self.rewriter.exit)

            if ( Utils.is_cuckoo_enable() and count_evasive + count_minimal == 0 ) or (not Utils.is_cuckoo_enable() and count_evasive == 0):
                if self.rewriter.exit:
                    logger_min.info('%%%%%%%%%%%%%%%%%%%%%%%% Minimizer Finish %%%%%%%%%%%%%%%%%%%%%%%%')
                    exit()